{
  "name": "linter-scalac",
  "main": "./lib/linter-scalac",
  "version": "2.0.1",
  "private": true,
  "description": "Lint Scala on the fly, using scalac. Also possible to use other Scala linters, such as WartRemover, via compiler options.",
  "repository": "https://github.com/AtomLinter/linter-scalac",
  "license": "MIT",
  "engines": {
    "atom": ">=1.7.0 <2.0.0"
  },
  "configSchema": {
    "scalacExecutablePath": {
      "default": "scalac",
      "description": "The path of the compiler executable, with binary name. By default will use `scalac` from your path.",
      "type": "string"
    },
    "scalacOptions": {
      "default": "-Xlint",
      "description": "Extra options passed to `scalac`",
      "type": "string"
    },
    "compileClassesToClasspath": {
      "default": false,
      "description": "Compile classes to classpath.",
      "type": "boolean"
    },
    "compileAllClassesOnLint": {
      "default": false,
      "description": "Compile all classes on lint.",
      "type": "boolean"
    },
    "lintsOnChange": {
      "default": false,
      "description": "Determines if lints on every change or lint on save only.",
      "type": "boolean"
    }
  },
  "scripts": {
    "lint": "eslint .",
    "test": "atom --test spec"
  },
  "dependencies": {
    "atom-linter": "10.0.0",
    "atom-package-deps": "5.1.0",
    "glob": "7.1.6",
    "mkdirp": "1.0.4"
  },
  "devDependencies": {
    "eslint": "6.8.0",
    "eslint-config-airbnb-base": "14.0.0",
    "eslint-plugin-import": "2.20.1",
    "jasmine-fix": "1.3.1",
    "rimraf": "3.0.2"
  },
  "package-deps": [
    "linter:2.0.0"
  ],
  "providedServices": {
    "linter": {
      "versions": {
        "2.0.0": "provideLinter"
      }
    }
  },
  "eslintConfig": {
    "extends": "airbnb-base",
    "rules": {
      "global-require": "off",
      "import/no-unresolved": [
        "error",
        {
          "ignore": [
            "atom"
          ]
        }
      ]
    },
    "globals": {
      "atom": true
    },
    "env": {
      "node": true,
      "browser": true
    }
  },
  "renovate": {
    "extends": [
      "config:base"
    ],
    "semanticCommits": true,
    "rangeStrategy": "pin",
    "packageRules": [
      {
        "packagePatterns": [
          "^eslint"
        ],
        "groupName": "ESLint packages"
      }
    ]
  }
}
